#for (i in 1:n)
n=5
for (i in 1:n){}
for (i in 1:n){
count=count+choose(n,i);
}
count=0
for (i in 1:n){
count=count+choose(n,i);
}
count
count=0
n=6
for (i in 1:n){
count=count+choose(n,i);
}
count
n=7
count=0
for (i in 1:n){
count=count+choose(n,i);
}
count
choose(3+2,2)
choose(3+2,3)
choose(4,2)
setwd("f:/votes2015/")
x=read.delim2("expc.txt",stringsAsFactors = F) # c=7 , b =6
colnames(x)[2:3]=c("cityID","PollingStationID");
cityPoll=read.table("cityPoll.txt",stringsAsFactors = F);
xx=t(apply(x[,-(1:7)],1,function(x){return(log(1+x/sum(x)))}))
x=merge(x,cityPoll,by=c("cityID","PollingStationID"),all.x=TRUE,sort=F)
dim(x)
x[1,]
by(x,PollingStationName,FUN = browser)
by(x,"PollingStationName",FUN = browser)
x=as.data.frame(x)
by(x,PollingStationName,FUN = browser)
x$PollingStationName
by(x,PollingStationName,function(x){browser()})
tapply(x,PollingStationName,function(x){browser()})
colnames(x)
tapply(x,x$PollingStationName,function(x){browser()})
by(x,x$PollingStationName,function(x){browser()})
x
x[-(1:3),]
x[,-(1:3)]
x[,-c(1:3,ncol(x))]
x[,-c(1:5,ncol(x))]
x[,-c(1:6,ncol(x))]
x[,-c(1:7,ncol(x))]
chisq.test(x[,-c(1:7,ncol(x))])
chisq.test(t(x[,-c(1:7,ncol(x))]))
chisq.test(x[,-c(1:7,ncol(x))])
chisq.test(as.matrix(x[,-c(1:7,ncol(x))]))
chisq.test(as.matrix(x[,-c(1:7,ncol(x))]),simulate.p.value = T)
as.matrix(x[,-c(1:7,ncol(x))])
chisq.test(as.matrix(x[,-c(1:7,ncol(x))]))
mat=as.matrix(x[,-c(1:7,ncol(x))])
colSums(mat)
mat=mat[,-(colSums(mat)==0)]
mat
colSums(mat)
mat=as.matrix(x[,-c(1:7,ncol(x))])
colSums(mat)
colSums(mat)==0
mat=mat[,(colSums(mat)>0)]
mat
chisq.test(mat)
chisq.test(mat,simulate.p.value = T)
temp=by(x[1:100,],x$PollingStationName[1:100],function(x){
mat=as.matrix(x[,-c(1:7,ncol(x))]);
mat=mat[,(colSums(mat)>0)]
return(chisq.test(mat,simulate.p.value = T)$p.value)
})
אקצפ
temp
unlist(temp)
temp=tapply(x[1:100,],x$PollingStationName[1:100],function(x){
mat=as.matrix(x[,-c(1:7,ncol(x))]);
mat=mat[,(colSums(mat)>0)]
return(chisq.test(mat,simulate.p.value = T)$p.value)
})
temp
temp[1]
unlist(temp)
unlist(temp)[1]
unlist(temp)[2]
unlist(temp)[1:2]
as.numeric(unlist(temp))
p.adjust((as.numeric(unlist(temp),method="fdr")
)
)
p.adjust(as.numeric(unlist(temp)),method="fdr")
p.adjust(as.numeric(unlist(temp)),method="BH")
as.numeric(unlist(temp))
temp=by(x,x$PollingStationName,function(x){
mat=as.matrix(x[,-c(1:7,ncol(x))]);
mat=mat[,(colSums(mat)>0)]
return(chisq.test(mat,simulate.p.value = T)$p.value)
})
